# Generated by Django 5.2.5 on 2025-08-09 22:37

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('configurations', '0003_groupmanagergroup'),
    ]

    operations = [
        migrations.CreateModel(
            name='Conducteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('erp_id', models.IntegerField(help_text="Identifiant du conducteur dans l'ERP.", unique=True)),
                ('nom', models.CharField(max_length=255)),
                ('prenom', models.CharField(max_length=255)),
                ('date_naissance', models.DateField(blank=True, help_text='Date de naissance (optionnelle).', null=True)),
                ('date_entree', models.DateField(help_text="Date d'embauche")),
                ('date_sortie', models.DateField(blank=True, help_text='Date de fin de contrat.', null=True)),
                ('actif_p', models.BooleanField(default=True, help_text='Conducteur actif ?', verbose_name='Actif')),
                ('interim_p', models.BooleanField(default=False, help_text='Conducteur intérimaire ?', verbose_name='Intérim')),
            ],
            options={
                'verbose_name': 'Conducteur',
                'verbose_name_plural': 'Conducteurs',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='Notateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('prenom', models.CharField(max_length=255)),
                ('date_entree', models.DateField(help_text="Date d'embauche")),
                ('date_sortie', models.DateField(blank=True, help_text='Date de fin de contrat', null=True)),
            ],
            options={
                'verbose_name': 'Notateur',
                'verbose_name_plural': 'Notateurs',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='CriteresNotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Nom du critère de notation', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description')),
                ('valeur_mini', models.IntegerField(help_text='Valeur plancher')),
                ('valeur_maxi', models.IntegerField(help_text='Valeur plafond')),
                ('actif', models.BooleanField(default=True, help_text='Critère actuellement utilisé')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Critère de notation',
                'verbose_name_plural': 'Critères de notation',
                'ordering': ['nom'],
                'indexes': [models.Index(fields=['nom'], name='configurati_nom_29be65_idx'), models.Index(fields=['actif'], name='configurati_actif_e0efa4_idx')],
            },
        ),
        migrations.CreateModel(
            name='Notation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_notation', models.DateField(help_text='Date de la notation')),
                ('valeur', models.IntegerField(blank=True, null=True)),
                ('conducteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.conducteur')),
                ('critere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.criteresnotation')),
                ('notateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.notateur')),
            ],
            options={
                'verbose_name': 'Notation',
                'verbose_name_plural': 'Notations',
                'unique_together': {('conducteur', 'critere', 'date_notation', 'notateur')},
            },
        ),
        migrations.CreateModel(
            name='HistoriqueNotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ancienne_valeur', models.IntegerField(blank=True, null=True)),
                ('nouvelle_valeur', models.IntegerField()),
                ('date_changement', models.DateTimeField(default=django.utils.timezone.now)),
                ('conducteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.conducteur')),
                ('critere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.criteresnotation')),
                ('notateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.notateur')),
                ('notation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.notation')),
            ],
            options={
                'verbose_name': 'Historique de notation',
                'verbose_name_plural': 'Historiques de notation',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Nom du service', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['nom'],
                'indexes': [models.Index(fields=['nom'], name='configurati_nom_056017_idx')],
            },
        ),
        migrations.AddField(
            model_name='notateur',
            name='service',
            field=models.ForeignKey(help_text="Service d'affectation", on_delete=django.db.models.deletion.CASCADE, to='configurations.service'),
        ),
        migrations.AddField(
            model_name='conducteur',
            name='service',
            field=models.ForeignKey(help_text="Nom du service d'affectation.", on_delete=django.db.models.deletion.CASCADE, to='configurations.service'),
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Commune du site', max_length=255)),
                ('code_postal', models.CharField(help_text='Code postal français sur 5 caractères.', max_length=5, validators=[django.core.validators.RegexValidator('^\\d{5}$', message='Un code postal français contient 5 caractères')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Site',
                'verbose_name_plural': 'Sites',
                'ordering': ['code_postal', 'nom'],
                'indexes': [models.Index(fields=['code_postal'], name='configurati_code_po_654904_idx'), models.Index(fields=['nom'], name='configurati_nom_5f7aee_idx')],
                'unique_together': {('code_postal', 'nom')},
            },
        ),
        migrations.CreateModel(
            name='HistoriqueSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_entree', models.DateField()),
                ('date_sortie', models.DateField(blank=True, null=True)),
                ('conducteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.conducteur')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.site')),
            ],
            options={
                'verbose_name': 'Historique de site',
                'verbose_name_plural': 'Historiques de site',
            },
        ),
        migrations.AddField(
            model_name='conducteur',
            name='site',
            field=models.ForeignKey(help_text="Nom du site d'affectation.", on_delete=django.db.models.deletion.CASCADE, to='configurations.site'),
        ),
        migrations.CreateModel(
            name='Societe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Nom de la société', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Société',
                'verbose_name_plural': 'Sociétés',
                'ordering': ['nom'],
                'indexes': [models.Index(fields=['nom'], name='configurati_nom_26cee8_idx')],
            },
        ),
        migrations.AddField(
            model_name='conducteur',
            name='societe',
            field=models.ForeignKey(help_text="Nom de la société d'affectation.", on_delete=django.db.models.deletion.CASCADE, to='configurations.societe'),
        ),
        migrations.AddIndex(
            model_name='notateur',
            index=models.Index(fields=['nom', 'prenom'], name='configurati_nom_cf3e3d_idx'),
        ),
        migrations.AddIndex(
            model_name='notateur',
            index=models.Index(fields=['date_sortie'], name='configurati_date_so_1385b8_idx'),
        ),
        migrations.AddIndex(
            model_name='conducteur',
            index=models.Index(fields=['nom', 'prenom'], name='configurati_nom_dbc72c_idx'),
        ),
        migrations.AddIndex(
            model_name='conducteur',
            index=models.Index(fields=['erp_id'], name='configurati_erp_id_83925b_idx'),
        ),
        migrations.AddIndex(
            model_name='conducteur',
            index=models.Index(fields=['actif_p', 'date_sortie'], name='configurati_actif_p_92d8a5_idx'),
        ),
        migrations.AddIndex(
            model_name='conducteur',
            index=models.Index(fields=['service', 'site'], name='configurati_service_5ef67d_idx'),
        ),
    ]
